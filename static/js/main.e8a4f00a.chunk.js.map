{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","isOperator","endsWithOperator","props","_this","Object","D_Programming_react_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Programming_react_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Programming_react_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","currentVal","prevVal","formula","currentSign","lastClicked","maxDigitWarning","bind","D_Programming_react_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","_this2","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","target","value","length","react__WEBPACK_IMPORTED_MODULE_6___default","className","Formula","Output","currentValue","Buttons","evaluate","operators","decimal","numbers","Component","id","onClick"],"mappings":"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","file":"static/js/main.e8a4f00a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable react/jsx-no-target-blank */\r\n/* eslint-disable no-mixed-operators */\r\n/* eslint-disable react/no-direct-mutation-state */\r\n/* eslint-disable no-eval */\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nconst isOperator = /[x/+‑]/;\r\nconst endsWithOperator = /[x+‑/]$/;\r\n     \r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentVal: '0',\r\n      prevVal: '0',\r\n      formula: '',\r\n      currentSign: 'pos',\r\n      lastClicked: ''\r\n    }\r\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n    this.handleOperators = this.handleOperators.bind(this);\r\n    this.handleEvaluate = this.handleEvaluate.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleNumbers = this.handleNumbers.bind(this);\r\n  }\r\n  \r\n  maxDigitWarning() {\r\n    this.setState({\r\n      currentVal: 'Digit Limit Met',\r\n      prevVal: this.state.currentVal\r\n    });\r\n    setTimeout(() => this.setState({currentVal: this.state.prevVal}), 1000);\r\n  }\r\n  \r\n  handleEvaluate() {\r\n    if (!this.state.currentVal.includes('Limit')) {\r\n      let expression = this.state.formula;\r\n      if (endsWithOperator.test(expression)) expression = expression.slice(0, -1);\r\n      expression = expression.replace(/x/g, \"*\").replace(/‑/g, \"-\");\r\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\r\n      this.setState({\r\n        currentVal: answer.toString(),\r\n        formula: expression.replace(/\\*/g, '⋅').replace(/-/g, '‑') + '=' + answer,\r\n        prevVal: answer,\r\n        evaluated: true\r\n      });\r\n    }\r\n  }\r\n    \r\n  handleOperators(e) { \r\n    if (!this.state.currentVal.includes('Limit')) {\r\n      this.setState({currentVal: e.target.value,evaluated: false});\r\n      if (this.state.formula.includes('=')) {\r\n        this.setState({formula: this.state.prevVal + e.target.value});\r\n      } else {\r\n        this.setState({\r\n          prevVal: !isOperator.test(this.state.currentVal) ? \r\n            this.state.formula : \r\n            this.state.prevVal,\r\n          formula: !isOperator.test(this.state.currentVal) ? \r\n            this.state.formula += e.target.value : \r\n            this.state.prevVal += e.target.value\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  handleNumbers(e) {\r\n    if (!this.state.currentVal.includes('Limit')) {\r\n      this.setState({evaluated: false})\r\n      if (this.state.currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (this.state.evaluated === true) {\r\n        this.setState({\r\n          currentVal: e.target.value,\r\n          formula: e.target.value !== '0' ? e.target.value : '',\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal: \r\n            this.state.currentVal === '0' || \r\n            isOperator.test(this.state.currentVal) ? \r\n            e.target.value : this.state.currentVal + e.target.value,\r\n          formula:  \r\n            this.state.currentVal === '0' && e.target.value === '0' ?\r\n            this.state.formula : \r\n            /([^.0-9]0)$/.test(this.state.formula) ? \r\n            this.state.formula.slice(0, -1) + e.target.value :\r\n            this.state.formula + e.target.value,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  handleDecimal() {\r\n    if (this.state.evaluated === true) {\r\n      this.setState({\r\n        currentVal: '0.',\r\n        formula: '0.',\r\n        evaluated: false});\r\n    } else if (!this.state.currentVal.includes('.') &&\r\n      !this.state.currentVal.includes('Limit')) {\r\n      this.setState({evaluated: false})\r\n      if (this.state.currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (endsWithOperator.test(this.state.formula) || \r\n        this.state.currentVal === '0' && this.state.formula === '') {\r\n        this.setState({\r\n          currentVal: '0.',\r\n          formula: this.state.formula + '0.'\r\n        });         \r\n      } else {\r\n        this.setState({\r\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.',\r\n          formula: this.state.formula + '.',\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  initialize() {\r\n    this.setState({\r\n      currentVal: '0',\r\n      prevVal: '0',\r\n      formula: '',\r\n      currentSign: 'pos',\r\n      lastClicked: ''\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='calculator text-center'>\r\n          <h1>JavaScript Calculator</h1>\r\n          <Formula formula={this.state.formula.replace(/x/g, '⋅')} />\r\n          <Output currentValue={this.state.currentVal} />\r\n          <Buttons evaluate={this.handleEvaluate}\r\n                   operators={this.handleOperators}\r\n                   initialize={this.initialize} \r\n                   decimal={this.handleDecimal}\r\n                   numbers={this.handleNumbers} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nclass Buttons extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"buttons\">\r\n        <button id=\"clear\"    value='AC' onClick={this.props.initialize} className=\"btn btn-danger btn-lg\">AC</button>\r\n        <br/>\r\n        <button id=\"seven\"    value='7'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">7</button>\r\n        <button id=\"eight\"    value='8'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">8</button>\r\n        <button id=\"nine\"     value='9'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">9</button>\r\n        <button id=\"divide\"   value='/'  onClick={this.props.operators} className=\"btn btn-primary btn-lg\">/</button>\r\n        <br/>\r\n        <button id=\"four\"     value='4'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">4</button>\r\n        <button id=\"five\"     value='5'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">5</button>\r\n        <button id=\"six\"      value='6'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">6</button>\r\n        <button id=\"multiply\" value='x'  onClick={this.props.operators} className=\"btn btn-primary btn-lg\">x</button>\r\n        <br/>\r\n        <button id=\"one\"      value='1'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">1</button>\r\n        <button id=\"two\"      value='2'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">2</button>\r\n        <button id=\"three\"    value='3'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">3</button>\r\n        <button id=\"subtract\" value='‑'  onClick={this.props.operators} className=\"btn btn-primary btn-lg\">-</button>\r\n        <br/>\r\n        <button id=\"zero\"     value='0'  onClick={this.props.numbers} className=\"btn btn-primary btn-lg\">0</button>\r\n        <button id=\"decimal\"  value='.'  onClick={this.props.decimal} className=\"btn btn-primary btn-lg\">.</button>\r\n        <button id=\"equals\"   value='='  onClick={this.props.evaluate} className=\"btn btn-primary btn-lg\">=</button>\r\n        <button id=\"add\"      value='+'  onClick={this.props.operators} className=\"btn btn-primary\">+</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Output extends Component {\r\n  render () {\r\n    return <div id=\"display\" className=\"outputScreen text-right\">{this.props.currentValue}</div>\r\n  }\r\n}; \r\n\r\nclass Formula extends Component {\r\n  render() {\r\n    return <div className=\"formulaScreen\">{this.props.formula}</div>\r\n  }\r\n}; \r\n\r\nexport default App;\r\n\r\n"],"sourceRoot":""}